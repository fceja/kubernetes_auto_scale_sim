version: "3.8"
services:
  zookeeper:
    deploy:
      replicas: 1
      restart_policy:
        condition: always
    image: ciscoceja/zookeeper-3.9.2
    networks:
      - kafka-net
    ports:
      - "2181:2181"
  kafka-server:
    depends_on:
      - zookeeper
    deploy:
      replicas: 1
      restart_policy:
        condition: always
    image: kafka-3.4.1-server # TODO - update to docker hub when created
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-server:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    secrets:
      - kafka-server-secrets
  kafka-producer:
    depends_on:
      - kafka-server
    deploy:
      replicas: 1
      restart_policy:
        condition: always
    image: kafka-3.4.1-producer # TODO - update to docker hub when created
    networks:
      - kafka-net
    secrets:
      - kafka-producer-secrets
  kafka-consumer:
    depends_on:
      - kafka-server
    deploy:
      replicas: 1
      restart_policy:
        condition: always
    image: kafka-3.4.1-consumer # TODO - update to docker hub when created
    networks:
      - kafka-net
    secrets:
      - kafka-consumer-secrets
  kafdrop-server: # Optional
    depends_on:
      - kafka-server
    deploy:
      replicas: 1
      restart_policy:
        condition: always
    environment:
      KAFKA_BROKERCONNECT: "kafka-server:9093"
    image: kafdrop-4.0.3-snapshot # TODO - update to docker hub when created
    networks:
      - kafka-net
    ports:
      - "9000:9000"
secrets:
  kafka-server-secrets:
    external: true
  kafka-producer-secrets:
    external: true
  kafka-consumer-secrets:
    external: true
networks:
  kafka-net:
